{"version":3,"sources":["components/Form.js","redux/actions/index.js","components/Card.js","components/ThemeToggle.js","App.js","redux/reducers/placeReducer.js","redux/reducers/placeDataReducer.js","redux/reducers/themeReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Form","place","useSelector","state","dispatch","useDispatch","className","type","placeholder","value","onChange","e","payload","updatePlace","target","onClick","a","axios","get","res","data","fetchData","updatePlaceData","Card","placeData","theme","location","src","current","condition","icon","alt","temp_c","text","name","wind_kph","humidity","precip_mm","ThemeToggle","log","console","App","placeReducer","placeDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c00d0a98.chunk.js","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePlace, updatePlaceData } from \"redux/actions\";\r\nconst Form = () => {\r\n  const place = useSelector((state) => state.place);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"eg.  Delhi\"\r\n            value={place}\r\n            onChange={(e) => dispatch(updatePlace(e.target.value))}\r\n          />\r\n          <button\r\n            onClick={(e) => {\r\n              dispatch(updatePlaceData(place));\r\n            }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import axios from \"axios\";\r\nconst updatePlace = (place) => {\r\n  return {\r\n    type: \"UPDATE_PLACE\",\r\n    payload: place,\r\n  };\r\n};\r\n\r\nconst updatePlaceData = (place) => {\r\n  return (dispatch) => {\r\n    const fetchData = async () => {\r\n      const res = await axios.get(\r\n        `https://api.weatherapi.com/v1/current.json?key=669c1b1ce3ac452bafc83350210508&q=${place}&aqi=yes`\r\n      );\r\n      const data = res.data;\r\n      dispatch({\r\n        type: \"UPDATE_PLACE_DATA\",\r\n        payload: data,\r\n      });\r\n      dispatch({\r\n        type: \"UPDATE_PLACE\",\r\n        payload: \"\",\r\n      });\r\n    };\r\n    fetchData();\r\n  };\r\n};\r\n\r\nconst toggleTheme = () => {\r\n  return {\r\n    type: \"TOGGLE_THEME\",\r\n  };\r\n};\r\n\r\nexport { updatePlace, updatePlaceData, toggleTheme };\r\n","import { useSelector } from \"react-redux\";\r\nconst Card = () => {\r\n  const placeData = useSelector((state) => state.placeData);\r\n  const theme = useSelector((state) => state.theme);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"offset-md-4 col-12 col-md-4\">\r\n          <div className={theme ? \"card dark\" : \"card\"}>\r\n            {placeData.location ? (\r\n              <div>\r\n                <img\r\n                  src={placeData.current.condition.icon}\r\n                  alt=\"weather icon\"\r\n                />\r\n                <div className=\"temp\">{placeData.current.temp_c}Â°</div>\r\n                <div className=\"description\">\r\n                  {placeData.current.condition.text}\r\n                </div>\r\n                <div className=\"place\">{placeData.location.name}</div>\r\n                <div className=\"container\">\r\n                  <div className=\"row whp\">\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Wind Now</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.wind_kph}\r\n                        <span className=\"unit\">KM</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Humidity</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.humidity}\r\n                        <span className=\"unit\">%</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Precipitation</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.precip_mm}\r\n                        <span className=\"unit\">%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <h1>Try Another city</h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleTheme } from \"redux/actions\";\r\n\r\nconst ThemeToggle = () => {\r\n  const theme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"toggle-theme\">\r\n      <button\r\n        onClick={() => dispatch(toggleTheme(theme))}\r\n        className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n      >\r\n        {theme ? \"Light\" : \"Dark\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport Form from \"components/Form\";\r\nimport Card from \"components/Card\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ThemeToggle from \"components/ThemeToggle\";\r\nconst log = console.log;\r\nfunction App() {\r\n  const theme = useSelector((state) => state.theme);\r\n  log(theme);\r\n  return (\r\n    <div className={theme ? \"App dark\" : \"App\"}>\r\n      <ThemeToggle />\r\n      <Form />\r\n      <Card />\r\n      {/* <div></div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const placeReducer = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case \"UPDATE_PLACE\":\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default placeReducer;\r\n","const placeDataReducer = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case \"UPDATE_PLACE_DATA\":\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default placeDataReducer;\r\n","//false == light\r\n//true == dark\r\n\r\nconst themeReducer = (state = false, { type }) => {\r\n  switch (type) {\r\n    case \"TOGGLE_THEME\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default themeReducer;\r\n","import placeReducer from \"./placeReducer\";\r\nimport placeDataReducer from \"./placeDataReducer\";\r\nimport themeReducer from \"./themeReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  place: placeReducer,\r\n  placeData: placeDataReducer,\r\n  theme: themeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport {\r\n  //   devToolsEnhancer,\r\n  composeWithDevTools,\r\n} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n// const store = createStore(rootReducer, devToolsEnhancer());\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"redux/store\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}